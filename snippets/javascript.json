{
  "🎯 log 字符:变量": {
    "prefix": "cls",
    "body": [
      "console.log('${0:string} >>',${0:variable});"
    ]
  },
  "🎯 log 变量": {
    "prefix": "clv",
    "body": [
      "console.log(${1:variable});"
    ]
  },
  "🎯 v2 data": {
    "prefix": "vdata",
    "body": [
      "data() {",
      "  return {",
      "    $1",
      "  }",
      "},"
    ]
  },
  "🎯 导入 vue": {
    "prefix": "iVue",
    "body": [
      "import { $1 } from 'vue'"
    ]
  },
  "🎯 导入 reactive": {
    "prefix": "iReactive",
    "body": [
      "reactive"
    ]
  },
  "🎯 导入 onBeforeMount": {
    "prefix": "iBMount",
    "body": [
      "onBeforeMount "
    ]
  },
  "🎯 导入 onMounted ": {
    "prefix": "iMounted",
    "body": [
      "onMounted "
    ]
  },
  "🎯 导入 onBeforeUpdate ": {
    "prefix": "iBUpdate",
    "body": [
      "onBeforeUpdate "
    ]
  },
  "🎯 导入 onUpdated ": {
    "prefix": "iUpdated",
    "body": [
      "onUpdated "
    ]
  },
  "🎯 导入 onBeforeUnmount ": {
    "prefix": "iBUnmount",
    "body": [
      "onBeforeUnmount "
    ]
  },
  "🎯 导入 onUnmounted": {
    "prefix": "iUnmounted",
    "body": [
      "onUnmounted "
    ]
  },
  "🎯 v2 props": {
    "prefix": "vProp",
    "body": [
      "props: {",
      "  ${1:propName}: {",
      "    type: ${2:type}",
      "  }",
      "},"
    ]
  },
  "🎯 v2 props default ": {
    "prefix": "vPD",
    "body": [
      "props: {",
      "  ${1:propName}: {",
      "    type: ${2:type},",
      "    default: ${3:default}",
      "  }",
      "},"
    ]
  },
  "🎯 v2 props default required": {
    "prefix": "vPDR",
    "body": [
      "props: {",
      "  ${1:propName}: {",
      "    type: ${2:type},",
      "    default: ${3:default},",
      "    required: true",
      "  }",
      "},"
    ]
  },
  "🎯 v2 methods": {
    "prefix": "vMethods",
    "body": [
      "methods: {",
      "  ${1:methodName}() {",
      "",
      "  }",
      "},"
    ]
  },
  "🎯 v2 computed": {
    "prefix": "vComputed",
    "body": [
      "computed: {",
      "  ${1:computedName}() {",
      "    return $2",
      "  }",
      "},"
    ]
  },
  "🎯 v2 computed setter": {
    "prefix": "vComputedSetter",
    "body": [
      "computed: {",
      "  ${1:computedName}() {",
      "    get() {",
      "",
      "      return ",
      "    },",
      "    set(newValue) {",
      "",
      "    },",
      "  }",
      "},"
    ]
  },
  "🎯 v2 watch": {
    "prefix": "vWatch",
    "body": [
      "watch: {",
      "  ${1:watchName}(newValue, oldValue) {",
      "    $2",
      "  }",
      "},"
    ]
  },
  "🎯 v2 watch deep": {
    "prefix": "vWD",
    "body": [
      "watch: {",
      "  ${1:watchName}: {",
      "    handler(newValue, oldValue) {",
      "      $2",
      "    },",
      "    deep:true,",
      "  }",
      "},"
    ]
  },
  "🎯 v2 watch immediate": {
    "prefix": "vWI",
    "body": [
      "watch: {",
      "  ${1:watchName}: {",
      "    handler(newValue, oldValue) {",
      "      $2",
      "    },",
      "    immediate:true,",
      "  }",
      "},"
    ]
  },
  "🎯 v2 watch deep immediate": {
    "prefix": "vWDI",
    "body": [
      "watch: {",
      "  ${1:watchName}: {",
      "    handler(newValue, oldValue) {",
      "      $2",
      "    },",
      "    deep:true,",
      "    immediate:true,",
      "  }",
      "},"
    ]
  },
  "🎯 v2 filters": {
    "prefix": "vFilters",
    "body": [
      "filters: {",
      "  ${1:filtersName}(value) {",
      "    return value;",
      "  }",
      "},"
    ]
  },
  "🎯 v2 mixins": {
    "prefix": "vMixins",
    "body": [
      "mixins: [${1:mixinName}],"
    ]
  },
  "🎯 v2 beforeCreate": {
    "prefix": "vBCreate",
    "body": [
      "beforeCreate () {",
      "",
      "},"
    ]
  },
  "🎯 v2 created": {
    "prefix": "vCreated",
    "body": [
      "created () {",
      "",
      "},"
    ]
  },
  "🎯 v2 beforeMount": {
    "prefix": "vBMount",
    "body": [
      "beforeMount () {",
      "",
      "},"
    ]
  },
  "🎯 v2 mounted": {
    "prefix": "vMounted",
    "body": [
      "mounted () {",
      "",
      "},"
    ]
  },
  "🎯 v2 beforeUpdate": {
    "prefix": "vBUpdate",
    "body": [
      "beforeMount () {",
      "",
      "},"
    ]
  },
  "🎯 v2 updated": {
    "prefix": "vUpdated",
    "body": [
      "updated () {",
      "",
      "},"
    ]
  },
  "🎯 v2 beforeUnmount": {
    "prefix": "vBUnmount",
    "body": [
      "beforeUnmount () {",
      "",
      "},"
    ]
  },
  "🎯 v2 unmounted": {
    "prefix": "vUnmounted",
    "body": [
      "unmounted () {",
      "",
      "},"
    ]
  },
  "🎯 v3 computed": {
    "prefix": "vvComputed",
    "body": [
      "const ${1:computedName} = computed(() => {",
      "  return ",
      "})"
    ]
  },
  "🎯 v3 watch": {
    "prefix": "vvWatch",
    "body": [
      "watch(() => ${1:name}, (newValue, oldValue) => {",
      "  $2",
      "})"
    ]
  },
  "🎯 v3 watch immediate": {
    "prefix": "vvWI",
    "body": [
      "watch(() => ${1:name}, (newValue, oldValue) => {",
      "  $2",
      "},{ immediate: true })"
    ]
  },
  "🎯 v3 watch arr": {
    "prefix": "vvWatchArr",
    "body": [
      "watch([${1:nameA}, ${2:nameB}], ([new${1:nameA}, new${2:nameB}], [old${1:nameA}, old${2:nameB}]) => {",
      "  $3",
      "})"
    ]
  },
  "🎯 v3 watch arr immediate": {
    "prefix": "vvWAI",
    "body": [
      "watch([${1:nameA}, ${2:nameB}], ([new${1:nameA}, new${2:nameB}], [old${1:nameA}, old${2:nameB}]) => {",
      "  $3",
      "},{ immediate: true })"
    ]
  },
  "🎯 v3 onBeforeMount": {
    "prefix": "vvBMounted",
    "body": [
      "onBeforeMount((${1:params}) => {",
      "",
      "})"
    ]
  },
  "🎯 v3 onMounted": {
    "prefix": "vvMounted",
    "body": [
      "onMounted((${1:params}) => {",
      "",
      "})"
    ]
  },
  "🎯 v3 onBeforeUpdate": {
    "prefix": "vvBUpdate",
    "body": [
      "onMounted((${1:params}) => {",
      "",
      "})"
    ]
  },
  "🎯 v3 onUpdated": {
    "prefix": "vvUpdated",
    "body": [
      "onUpdated((${1:params}) => {",
      "",
      "})"
    ]
  },
  "🎯 v3 onBeforeUnmount": {
    "prefix": "vvBUnmount",
    "body": [
      "onBeforeUnmount((${1:params}) => {",
      "",
      "})"
    ]
  },
  "🎯 v3 onUnmounted": {
    "prefix": "vvUnmounted",
    "body": [
      "onUnmounted((${1:params}) => {",
      "",
      "})"
    ]
  }
}